---
- name: Update and upgrade packages
  apt:
    update_cache: yes
    upgrade: yes
    autoremove: yes

- name: Check if reboot required
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot if required
  reboot:
    msg: Rebooting due to a kernel update
  when: reboot_required_file.stat.exists

- name: Install extra packages
  package:
    name: "{{ extra_packages }}"
    state: present

- ansible.builtin.get_url:
    url: "{{ item }}"
    dest: /tmp
  loop: "{{ remote_packages }}"

- ansible.builtin.apt:
    deb: "/tmp/{{ item | basename}}"
    state: present
  loop: "{{ remote_packages }}"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"

- name: Replace the hostname entry with our own
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: ^127\.0\.0\.1 *localhost
    line: "127.0.0.1 {{ inventory_hostname }}"
    owner: root
    group: root
    mode: '0644'

- name: Disable cron e-mail notifications
  cron:
    name: MAILTO
    user: root
    env: yes
    job: ""

- name: Ensure mount points existence
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ username }}"
  loop: "{{ mount_points }}"

- name: create credential files
  ansible.builtin.template:
    src: credentials.j2
    dest: "/root/.credential_{{ item.name | lower }}"
    mode: 0600
  loop: "{{ mount_points }}"

# - name: Mount SMB volumes
#   ansible.posix.mount:
#     src: "{{ item.src }}"
#     path: "{{ item.path }}"
#     opts: "rw,_netdev,vers=2.0,uid={{ username }},credentials=/root/.credential_{{ item.name | lower }}"
#     fstype: cifs
#     state: mounted
#   loop: "{{ mount_points }}"

- name: install mdns-publish-cname pip package
  ansible.builtin.pip:
    name: mdns-publisher
    # python3.11 prevents system pip w/o this extra parameter
    extra_args: --break-system-packages
  notify:
    - restart mdns-publisher

- name: create mdns-publisher service file
  template:
    src: mdns-publisher.service.j2
    dest: /etc/systemd/system/mdns-publisher.service
  notify:
    - restart mdns-publisher

- name: add local subdomains to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    state: present
    line: "127.0.0.1 {{item}}.{{ inventory_hostname }}"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ services }}"

- name: Create Samba configuration
  ansible.builtin.template:
    src: samba.conf.j2
    dest: /etc/samba/smb.conf
    owner: root
    group: root
    mode: u=rw,go=r
  notify:
    - restart samba

- name: Configure Samba share(s)
  ansible.builtin.blockinfile:
    path: /etc/samba/smb.conf
    insertafter: "#===== Share Definitions ====="
    block: |
      [{{ samba.label }}]
      path = "{{ samba.path }}"
      available = {{ samba.available }}
      valid users = {{ samba.users | map(attribute='name') | join(" ") }}
      browsable = {{ samba.browsable }}
      read only = {{ samba.readonly }}
      writable = {{ samba.writable }}
  notify:
    - restart samba

- name: Creating samba user passwords
  shell: "(echo {{ item['smbpasswd'] }}; echo {{ item['smbpasswd'] }}) | smbpasswd -s -a {{ item['name'] }}"
  become: true
  with_items: "{{ samba.users }}"

- name: make samba share visible via mdns
  copy:
    src: smb.service
    dest: /etc/avahi/services/smb.service
    mode: 0644

- name: Create mount systemd file(s)
  template:
    src: mnt-share.mount.j2
    dest: "/etc/systemd/system/{{ item.path[1:] | replace('/', '-') }}.mount"
  loop: "{{ mount_points }}"
  notify: Enable systemd mount

- name: Create aumount systemd file(s)
  template:
    src: mnt-share.automount.j2
    dest: "/etc/systemd/system/{{ item.path[1:] | replace('/', '-') }}.automount"
  loop: "{{ mount_points }}"
  notify: Enable systemd automount
